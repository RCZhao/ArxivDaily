name: arXiv Daily

on:
  schedule:
    - cron: '0 1 * * *'   # 每天UTC时间1点自动运行
  workflow_dispatch:

jobs:
  run-arxiv:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Create Zotero config file
        run: |
          echo "[zotero]" > config.ini
          echo "user_id = ${{ secrets.ZOTERO_USER_ID }}" >> config.ini
          echo "api_key = ${{ secrets.ZOTERO_API_KEY }}" >> config.ini
        env:
          ZOTERO_USER_ID: ${{ secrets.ZOTERO_USER_ID }}
          ZOTERO_API_KEY: ${{ secrets.ZOTERO_API_KEY }}

      - name: Cache arxiv_cache.pickle
        id: cache-arxiv
        uses: actions/cache@v4
        with:
          path: arxiv_cache.pickle
          key: ${{ runner.os }}-arxiv-cache-${{ hashFiles('**/config.ini') }}
          restore-keys: |
            ${{ runner.os }}-arxiv-cache-

      - name: Cache NLTK data
        id: cache-nltk
        uses: actions/cache@v4
        with:
          path: nltk_data
          key: ${{ runner.os }}-nltk-data-v1

      - name: Update score files
        run: |
          python arxiv_engine.py update

      - name: Generate daily HTML
        run: |
          python arxiv_rank.py

      - name: Copy and move HTML files
        run: |
          today=$(date +%Y%m%d)
          if [ -f "$today.html" ]; then
            cp $today.html index.html
            mv $today.html arxiv_history/
          else
            echo "No HTML file generated today."
          fi

      - name: Commit and push changes
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add index.html arxiv_history/
          git commit -m "Auto update arxiv daily results [skip ci]" || echo "Nothing to commit"
          # Use github.ref_name to get the current branch name (e.g., 'main' or 'dev')
          # This makes the push command dynamic and avoids conflicts.
          CURRENT_BRANCH=${{ github.ref_name }}
          git pull --rebase origin $CURRENT_BRANCH
          git push origin $CURRENT_BRANCH
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Deploy to GitHub Pages
        # if: github.ref == 'refs/heads/main' # Only deploy when on the main branch
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./
          publish_branch: gh-pages
          keep_files: true